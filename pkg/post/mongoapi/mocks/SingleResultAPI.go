// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SingleResultAPI is an autogenerated mock type for the SingleResultAPI type
type SingleResultAPI struct {
	mock.Mock
}

// Decode provides a mock function with given fields: v
func (_m *SingleResultAPI) Decode(v interface{}) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSingleResultAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewSingleResultAPI creates a new instance of SingleResultAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSingleResultAPI(t mockConstructorTestingTNewSingleResultAPI) *SingleResultAPI {
	mock := &SingleResultAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
